openapi: "3.0.3"
info:
  title: "democratic_code_standards API"
  description: "democratic_code_standards API"
  version: "1.0.0"
servers:
- url: "https://democratic_code_standards"
tags:
- name: "Language"
  description: "Providing programming language related services."
- name: "User"
  description: "Providing user related services."
paths:
  /language:
    get:
      tags:
      - "Language"
      description: "Get list of programming languages."
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Language"
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "object"
  /user:
    get:
      tags:
      - "User"
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Profil"
  /user/login:
    post:
      tags:
      - "User"
      description: "Access point for user to login."
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/UserLoginReq"
        required: true
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PrijavaRes"
  /user/logout:
    get:
      tags:
      - "User"
      description: "Action for user logout."
components:
  schemas:
    Language:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          type: "string"
      required:
      - "id"
      - "name"
    Profil:
      type: "object"
      properties:
        user_id:
          type: "string"
          format: "uuid"
      required:
      - "user_id"
    UserLoginReq:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
      required:
      - "email"
      - "password"
    PrijavaRes:
      type: "object"
      properties:
        token:
          type: "string"
      required:
      - "token"